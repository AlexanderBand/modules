##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	conflict/full, trace/all_on, trace/all_off
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'conflict' command using a full qualified
#			module name. This tests the reactions of modulecmd
#			if the conflicting module is load or not and if
#			another module of the same category is load.
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set module "conflict/full"
set modulefile "$env(MODULEPATH)/$module"

set module_tron "trace/all_on"
set modulefile_tron "$env(MODULEPATH)/$module_tron"

set module_troff "trace/all_off"
set modulefile_troff "$env(MODULEPATH)/$module_troff"

#
#  For the different shells ...
#

set lmf_csh_troff "setenv _LMFILES_ $modulefile_troff:$modulefile ;"
set lm_csh_troff "setenv LOADEDMODULES $module_troff:$module ;"
set lmf_csh_tron "setenv _LMFILES_ $modulefile_tron ;"
set lm_csh_tron "setenv LOADEDMODULES $module_tron ;"
set lmf_csh "setenv _LMFILES_ $modulefile ;"
set lm_csh "setenv LOADEDMODULES $module ;"
set ts_csh "setenv testsuite yes ;"

set lmf_sh_troff "_LMFILES_=$modulefile_troff:$modulefile ;export _LMFILES_;"
set lm_sh_troff "LOADEDMODULES=$module_troff:$module ;export LOADEDMODULES;"
set lmf_sh_tron "_LMFILES_=$modulefile_tron ;export _LMFILES_;"
set lm_sh_tron "LOADEDMODULES=$module_tron ;export LOADEDMODULES;"
set lmf_sh "_LMFILES_=$modulefile ;export _LMFILES_;"
set lm_sh "LOADEDMODULES=$module ;export LOADEDMODULES;"
set ts_sh "testsuite=yes ;export testsuite;"

set lmf_py_troff "os.environ\['_LMFILES_'\] = '$modulefile_troff:$modulefile'"
set lm_py_troff "os.environ\['LOADEDMODULES'\] = '$module_troff:$module'"
set lmf_py_tron "os.environ\['_LMFILES_'\] = '$modulefile_tron'"
set lm_py_tron "os.environ\['LOADEDMODULES'\] = '$module_tron'"
set lmf_py "os.environ\['_LMFILES_'\] = '$modulefile'"
set lm_py "os.environ\['LOADEDMODULES'\] = '$module'"
set ts_py "os.environ\['testsuite'\] = 'yes'"

set lmf_pl_troff "\$ENV{'_LMFILES_'} = '$modulefile_troff:$modulefile';"
set lm_pl_troff "\$ENV{'LOADEDMODULES'} = '$module_troff:$module';"
set lmf_pl_tron "\$ENV{'_LMFILES_'} = '$modulefile_tron';"
set lm_pl_tron "\$ENV{'LOADEDMODULES'} = '$module_tron';"
set lmf_pl "\$ENV{'_LMFILES_'} = '$modulefile';"
set lm_pl "\$ENV{'LOADEDMODULES'} = '$module';"
set ts_pl "\$ENV{'testsuite'} = 'yes';"

set lmf_cm_troff "set(ENV{_LMFILES_} \"$modulefile_troff:$modulefile\")"
set lm_cm_troff "set(ENV{LOADEDMODULES} \"$module_troff:$module\")"
set lmf_cm_tron "set(ENV{_LMFILES_} \"$modulefile_tron\")"
set lm_cm_tron "set(ENV{LOADEDMODULES} \"$module_tron\")"
set lmf_cm "set(ENV{_LMFILES_} \"$modulefile\")"
set lm_cm "set(ENV{LOADEDMODULES} \"$module\")"
set ts_cm "set(ENV{testsuite} \"yes\")"

#
#  Error messages
#

set err_conflict "$error_msgs: Module '$module' conflicts with the currently loaded module\\(s\\) 'trace/all_on'\n"
set err_exec "$error_msgs: Tcl command execution failed: conflict\ttrace/all_on\n"
set err "$err_conflict$err_exec"

set test01 " test 0 = 1;"
#
#  The tests for cshells, bourne shells, python, perl and cmake
#

testouterr_cmd_re "csh" "load $module_tron $module" "$lm_csh_tron$lmf_csh_tron" "$err"
test_cmd "csh" "load $module_troff $module" "$lm_csh_troff$lmf_csh_troff$splitunset$ts_csh" 
test_cmd "csh" "load $module" "$lm_csh$lmf_csh$splitunset$ts_csh"

testouterr_cmd_re "sh" "load $module_tron $module" "$lm_sh_tron$lmf_sh_tron$test01" "$err"
test_cmd "sh" "load $module_troff $module" "$lm_sh_troff$lmf_sh_troff$splitunset$ts_sh" 
test_cmd "sh" "load $module" "$lm_sh$lmf_sh$splitunset$ts_sh"

testerr_cmd_re "python" "load $module_tron $module" "$err"
test_cmd "python" "load $module_tron $module" "$lm_py_tron\n$lmf_py_tron" 1
test_cmd "python" "load $module_troff $module" "$lm_py_troff\n$lmf_py_troff\n$ts_py" 
test_cmd "python" "load $module" "$lm_py\n$lmf_py\n$ts_py"

testerr_cmd_re "perl" "load $module_tron $module" "$err"
test_cmd "perl" "load $module_tron $module" "$lm_pl_tron$lmf_pl_tron" 1
test_cmd "perl" "load $module_troff $module" "$lm_pl_troff$lmf_pl_troff$ts_pl" 
test_cmd "perl" "load $module" "$lm_pl$lmf_pl$ts_pl"

testerr_cmd_re "cmake" "load $module_tron $module" "$err"
test_cmd "cmake" "load $module_tron $module" "$lm_cm_tron\n$lmf_cm_tron" 1
test_cmd "cmake" "load $module_troff $module" "$lm_cm_troff\n$lmf_cm_troff\n$ts_cm" 
test_cmd "cmake" "load $module" "$lm_cm\n$lmf_cm\n$ts_cm"

#
#  Cleanup
#

unset err_conflict
unset err_exec
unset err

unset lm_csh_tron
unset lmf_csh_tron
unset lm_csh_troff
unset lmf_csh_troff
unset lm_csh
unset lmf_csh
unset ts_csh

unset lm_sh_tron
unset lmf_sh_tron
unset lm_sh_troff
unset lmf_sh_troff
unset lm_sh
unset lmf_sh
unset ts_sh

unset lm_cm_tron
unset lmf_cm_tron
unset lm_cm_troff
unset lmf_cm_troff
unset lm_cm
unset lmf_cm
unset ts_cm

unset modulefile
unset module
unset modulefile_tron
unset module_tron
unset modulefile_troff
unset module_troff
