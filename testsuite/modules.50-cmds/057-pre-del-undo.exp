##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2006/06/01
#   Last Mod.:		%U%, %G%
#
#   Authors:		R.K. Owen, <rk@owen.sj.ca.us>
#
#   Description:	Testuite testsequence
#   Command:		unload
#   Modulefiles:	prepend/1.0
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the reverse 'prepend-path' module subcommand with
#			an arbitrary delimiter
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set ts_1 "http://foobar.org"
set ts_2 "http://foobar.net"
set ts_3 "http://foobar.com"
set ts_new "$ts_1 $ts_2"
# test colon char is correctly escaped in _modshare var
set tsmod_new "http\\://foobar.net:1:http\\://foobar.org:1"
set module "prepend/1.0"
set modulefile "$modpath/$module"

#
# Set up the environment for reversal ...
#

set env(testsuite) "$ts_3 $ts_1 $ts_2"
set env(testsuite_modshare)	"http\\://foobar.com:1:http\\://foobar.org:1:http\\://foobar.net:1"
set env(_LMFILES_) "$modulefile"
set env(LOADEDMODULES) "$module"

#
#  For the different shells ...
#

lappend ans [list set testsuite_modshare $tsmod_new]
lappend ans [list set testsuite $ts_new]
lappend ans [list unsetpath LOADEDMODULES]
lappend ans [list unsetpath _LMFILES_]

#
#  The tests
#

test_cmd_re "ALL" "unload $module" $ans

#
# Try bad argument list: missing variable name
#

set module "prepend/1.3"
set modulefile "$modpath/$module"
set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module
set ts_err "$moderr_msgs: unload-path should get an environment variable name\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "unload $module" "ERR" $ts_err

#
# Try bad argument list: missing variable value
#

set module "prepend/1.4"
set modulefile "$modpath/$module"
set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module
set ts_err "$moderr_msgs: unload-path should get a value for environment variable PATH\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "unload $module" "ERR" $ts_err

#
# Try bad argument list: empty variable name
#

set module "prepend/1.5"
set modulefile "$modpath/$module"
set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module
set ts_err "$moderr_msgs: unload-path should get a valid environment variable name\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "unload $module" "ERR" $ts_err

#
# Try bad argument list: empty delimiter value
#

set module "prepend/1.6"
set modulefile "$modpath/$module"
set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module
set ts_err "$moderr_msgs: unload-path should get a non-empty path delimiter\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "unload $module" "ERR" $ts_err

#
# Prepend multiple paths passed as one string
#

set module "prepend/1.8"
set modulefile "$modpath/$module"

set env(testsuite) " http://foobar.io $ts_3 $ts_1 $ts_2"
set env(testsuite_modshare) ":1:http\\://foobar.com:1:http\\://foobar.net:1:http\\://foobar.io:1:http\\://foobar.org:1"
set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module

set ans [list]
lappend ans [list set testsuite_modshare $tsmod_new]
lappend ans [list set testsuite $ts_new]
lappend ans [list unsetpath LOADEDMODULES]
lappend ans [list unsetpath _LMFILES_]

testouterr_cmd_re "sh" "unload $module" $ans ""

#
# Prepend multiple paths passed as multiple strings
#

set module "prepend/1.9"
set modulefile "$modpath/$module"

set env(_LMFILES_) $modulefile
set env(LOADEDMODULES) $module

testouterr_cmd_re "sh" "unload $module" $ans ""

#
#  Cleanup
#

unset env(testsuite)
unset env(testsuite_modshare)
unset env(_LMFILES_)
unset env(LOADEDMODULES)

unset ts_new
unset tsmod_new
unset ts_3
unset ts_2
unset ts_1

unset ans

unset modulefile
unset module
